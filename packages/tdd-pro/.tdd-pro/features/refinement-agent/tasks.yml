- id: setup-agent-foundation
  name: Create RefinementAgent extending Mastra Agent
  status: pending
  description: >-
    Create the core RefinementAgent class that extends Mastra's Agent with TDD
    expertise and conversation capabilities.
  acceptance_criteria:
    - RefinementAgent class extends Mastra Agent
    - Agent has TDD-focused instructions and persona
    - Basic conversation capability with mock responses
    - Integration with Mastra memory system
    - Unit tests confirm agent creation and basic functionality
  dependencies: []
  notes: >-
    Focus on Mastra-native approach using built-in memory, not custom
    persistence
- id: implement-tdd-validator
  name: Build TDD validation engine
  status: pending
  description: >-
    Create TDDValidator with rules from Beck, Metz, and Bernhardt to assess
    feature descriptions and code quality.
  acceptance_criteria:
    - Sandi Metz rules validation (class length, method params, etc.)
    - Test strategy assessment functionality
    - TDD readiness scoring mechanism
    - Integration with agent conversation flow
    - Comprehensive test coverage for validation rules
  dependencies:
    - setup-agent-foundation
  notes: Encode TDD expertise as actionable validation rules
- id: create-conversation-flow
  name: Implement conversational refinement logic
  status: pending
  description: >-
    Build the core conversation logic that guides developers through TDD-focused
    feature refinement.
  acceptance_criteria:
    - Multi-turn conversation handling
    - Context awareness across conversation turns
    - TDD-focused prompting and responses
    - Integration of TDD validation during conversation
    - Clear conversation termination criteria
  dependencies:
    - setup-agent-foundation
    - implement-tdd-validator
  notes: Use Mastra's conversation capabilities rather than custom implementation
- id: build-mcp-tools
  name: Create MCP tools for agent interaction
  status: pending
  description: >-
    Build MCP tools that expose the refinement agent for cursor/claude
    integration.
  acceptance_criteria:
    - start-refinement-conversation tool created
    - Enhanced refine-feature tool with conversation mode
    - Tools properly registered with MCP server
    - Integration with existing TDD-Pro tool collection
    - Tools accessible via cursor/claude
  dependencies:
    - create-conversation-flow
  notes: Focus on clean MCP tool interface for external access
- id: integrate-prd-updates
  name: Connect agent to feature PRD updates
  status: pending
  description: >-
    Enable the agent to automatically update feature PRD documents when
    refinement is complete.
  acceptance_criteria:
    - Agent can read current feature PRD content
    - Agent updates PRD with refined requirements
    - Integration with existing feature management workflow
    - Preservation of existing PRD structure and metadata
    - Atomic updates to prevent data corruption
  dependencies:
    - build-mcp-tools
  notes: Leverage existing feature management system
- id: setup-mastra-evaluation
  name: Create Mastra evaluation suite for agent performance
  status: pending
  description: >-
    Build evaluation framework using Mastra's eval system to objectively measure
    refinement agent performance.
  acceptance_criteria:
    - Evaluation scenarios for common refinement patterns
    - Integration with Mastra's evaluation framework
    - Automated scoring of agent responses
    - Performance metrics and reporting
    - Evaluation results accessible via Mastra UI
  dependencies:
    - integrate-prd-updates
  notes: >-
    Research Mastra eval system in .agents/examples/mastra for implementation
    guidance
- id: end-to-end-testing
  name: Complete integration testing and workflow validation
  status: pending
  description: >-
    Test the complete refinement workflow from cursor/claude through to PRD
    updates.
  acceptance_criteria:
    - Full conversation workflow works end-to-end
    - MCP tools function correctly with cursor/claude
    - PRD documents update properly after refinement
    - Agent demonstrates TDD expertise in conversations
    - Performance meets evaluation criteria
  dependencies:
    - setup-mastra-evaluation
  notes: Validate the complete user experience and workflow
