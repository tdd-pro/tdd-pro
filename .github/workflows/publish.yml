name: publish

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --force --tags

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ">=1.21"
          cache: true
          cache-dependency-path: packages/tui/go.sum

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: packages/tdd-pro/package-lock.json

      - name: Set up Bun (for publishing scripts)
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Download Go modules
        run: cd packages/tui && go mod download

      - name: Install Node.js dependencies
        run: cd packages/tdd-pro && npm ci

      - name: Build Node.js components
        run: cd packages/tdd-pro && npm run build

      - name: Run tests
        run: |
          cd packages/tdd-pro && npm test
          cd ../tui && go test ./...

      # NPM Publishing (Optional - requires NPM_TOKEN secret)
      # Uncomment this section if you want to publish to npm registry
      # - name: Publish NPM packages
      #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      #   run: |
      #     cd packages/tdd-pro
      #     echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      #     npm publish --access public
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Release with GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: ${{ github.event_name == 'workflow_dispatch' && 'build --snapshot --clean' || 'release --clean' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update install script compatibility
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          # The install script should now work with the new release
          echo "âœ… Install script is now compatible with release ${{ github.ref_name }}"
          echo "Users can run: curl -fsSL https://raw.githubusercontent.com/tdd-pro/tdd-pro/main/install | bash"

      - name: Set package.json version from tag
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#v}
          npm version --no-git-tag-version $VERSION

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public

  build-and-publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/mcp-server
    steps:
      - uses: actions/checkout@v3

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Build binary
        run: bun run build

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public